answer <- substr(readline("Please Select Your Favorite Genre\n 1. RnB/Hip-Hop Positive\n 2. RnB/Hip-Hop Negative\n 3. House/Dance/Electronics Positive\n 4. House/Dance/Electronics Negative\n 5. Rock/Metal Positive\n 6. Rock/Metal Negative\n 7. Classic Positive\n 8. Classic Negative"), 1L, 1L)
print("My music recommendation for you")
object<-rec_music(as.numeric(answer))
browseURL(object$my_url)
return(object)
}
setMusic(rec_music())
setMusic(rec_music())
dat=cbind.data.frame(title=c("i will always love you", "did youever love me", "sexy and I know it", "four to the floor remix", "december, 1963 (oh, what a night)", "forever", "Light Cavalry Overture", "cavalleria rusticana intermezzo"),
genre=rep(c("rnb/hiphop", "house/dance/electronics", "rock/metal", "classic"), each=2),
mood=rep(c("positive", "negative"),4),
url=c("https://www.youtube.com/watch?v=3JWTaaS7LdU", "https://www.youtube.com/watch?v=EAmVdgoghOw", "https://www.youtube.com/watch?v=wyx6JDQCslE", "https://www.youtube.com/watch?v=woE2h5k1NW4", "https://www.youtube.com/watch?v=nDxhugRKZ8g", "https://www.youtube.com/watch?v=WrQyPHzzfCA", "https://www.youtube.com/watch?v=XFQpPbjJWTc", "https://www.youtube.com/watch?v=BIQ2D6AIys8"), stringsAsFactors=F)
rec_music <- function(i=7)
{
my_music <- list(
my_title = dat$title[i],
my_genre = dat$genre[i],
my_mood = dat$mood[i],
my_url = dat$url[i]
)
## Set the name for the class
class(my_music) <- append(class(my_music),"rec_music")
return(my_music)
}
setMusic <- function(object)
{
print("Calling setMusic function")
UseMethod("setMusic",object)
print("Note this is not executed!")
}
setMusic.rec_music <- function(object)
{
answer <- substr(readline("Please Select Your Favorite Genre\n 1. RnB/Hip-Hop Positive\n 2. RnB/Hip-Hop Negative\n 3. House/Dance/Electronics Positive\n 4. House/Dance/Electronics Negative\n 5. Rock/Metal Positive\n 6. Rock/Metal Negative\n 7. Classic Positive\n 8. Classic Negative"), 1L, 1L)
print("My music recommendation for you")
object<-rec_music(as.numeric(answer))
browseURL(object$my_url)
return(object)
}
setMusic(rec_music())
setMusic(rec_music())
setMusic(rec_music())
x <- 1:10
funs <- list(
sum = sum,
mean = mean,
median = median
)
lapply(funs, function(f) f(x, na.rm=TRUE))
q()
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
compute_mean, function(f) f(x))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
compute_mean, function(f) f(x))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
system.time(compute_mean$base(x))
system.time(lapply(compute_mean, function(f) f(x)))
a<-system.time(compute_mean$base(x))
b<-system.time(compute_mean$sum(x))
c<-system.time(compute_mean$manual(x))
a+b+c
system.time(lapply(compute_mean, function(f) f(x)))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
a<-system.time(compute_mean$base(x))
b<-system.time(compute_mean$sum(x))
c<-system.time(compute_mean$manual(x))
a+b+c
system.time(lapply(compute_mean, function(f) f(x)))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
a<-system.time(compute_mean$base(x))
b<-system.time(compute_mean$sum(x))
c<-system.time(compute_mean$manual(x))
a+b+c
system.time(lapply(compute_mean, function(f) f(x)))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
a<-system.time(compute_mean$base(x))
b<-system.time(compute_mean$sum(x))
c<-system.time(compute_mean$manual(x))
a+b+c
system.time(lapply(compute_mean, function(f) f(x)))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
a<-system.time(compute_mean$base(x))
b<-system.time(compute_mean$sum(x))
c<-system.time(compute_mean$manual(x))
a+b+c
system.time(lapply(compute_mean, function(f) f(x)))
compute_mean$base(x)
compute_mean$manual(x)
compute_mean$sum(x)
lapply(compute_mean, function(f) f(x))
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
ptm<-proc.time()
compute_mean$base(x)
compute_mean$sum(x)
compute_mean$manual(x)
proc.time() - ptm
ptm<-proc.time()
lapply(compute_mean, function(f) f(x))
proc.time() - ptm
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
ptm<-proc.time()
compute_mean$base(x)
compute_mean$sum(x)
compute_mean$manual(x)
proc.time() - ptm
ptm<-proc.time()
lapply(compute_mean, function(f) f(x))
proc.time() - ptm
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
ptm<-proc.time()
compute_mean$base(x)
compute_mean$sum(x)
compute_mean$manual(x)
proc.time() - ptm
ptm<-proc.time()
lapply(compute_mean, function(f) f(x))
proc.time() - ptm
compute_mean <- list(
base = function(x) mean(x),
sum = function(x) sum(x) / length(x),
manual = function(x) {
total <- 0
n <- length(x)
for (i in seq_along(x)) {
total <- total + x[i] / n
}
total
}
)
x <- runif(1e5)
ptm<-proc.time()
compute_mean$base(x)
compute_mean$sum(x)
compute_mean$manual(x)
proc.time() - ptm
ptm<-proc.time()
lapply(compute_mean, function(f) f(x))
proc.time() - ptm
library(rvest)
url <- "http://www.nytimes.com/elections/results/california"
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
library(rvest)
url <- "http://www.nytimes.com/elections/results/iowa"
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
html <- read_html(url, encoding="utf-8")
tables <- html %>% html_table(fill=TRUE)
tables
tables <- html %>% html_table(fill=TRUE)
Sys.setlocale("LC_CTYPE", "en_US.UTF-8")
tables <- html %>% html_table(fill=TRUE)
Sys.setlocale("LC_ALL", "English")
tables <- html %>% html_table(fill=TRUE)
tables %>% purrr::map(glimpse)
library(tidyverse)
tables %>% purrr::map(glimpse)
url <- "http://www.nytimes.com/elections/results/california"
html <- read_html(url)
tables <- html %>% html_table(fill=TRUE)
tables %>% purrr::map(glimpse)
tables[[2]]
ca_results <- tables[[2]] %>% mutate(
Trump = parse_number(Trump),
Clinton = parse_number(Clinton)
)
ca_results
counties <- map_data("county")
install.packages("maps")
library(maps)
counties <- map_data("county")
counties
ca_results <- ca_results %>% mutate(
PercDem = Clinton/(Trump + Clinton)*100,
subregion = tolower(`Vote by county`)
)
ca_results
anti_join(ia_results, counties %>% filter(region=="iowa"), by="subregion")
anti_join(ia_results, counties %>% filter(region=="california"), by="subregion")
anti_join(ca_results, counties %>% filter(region=="california"), by="subregion")
anti_join(counties %>% filter(region=="california"), ia_results,  by="subregion")
anti_join(counties %>% filter(region=="california"), ca_results,  by="subregion")
ca_full <- left_join(ca_results,
counties %>% filter(region=="california"),
by="subregion")
ca_full
ca_full %>%
ggplot(aes( x = long, y = lat, group = subregion)) +
geom_polygon(aes(fill = PercDem)) +
scale_fill_gradient2(midpoint=50, mid = "white") +
ggthemes::theme_map()
library(ggtheme)
install.packages("ggtheme")
library(ggtheme)
install.packages("ggthemes")
library(ggthemes)
ca_full %>%
ggplot(aes( x = long, y = lat, group = subregion)) +
geom_polygon(aes(fill = PercDem)) +
scale_fill_gradient2(midpoint=50, mid = "white") +
ggthemes::theme_map()
Sys.setlocale("LC_ALL")
library(rvest)
library(tidyverse)
library(maps)
library(ggthemes)
install.packages("maps")
install.packages("maps")
install.packages("maps")
ca_full
ca_full %>%
ggplot(aes( x = long, y = lat, by = "subregion")) +
geom_polygon(aes(group=group, fill = PercDem))
library(rvest)
library(tidyverse)
library(maps)
library(ggthemes)
ca_full %>%
ggplot(aes( x = long, y = lat, by = "subregion")) +
geom_polygon(aes(group=group, fill = PercDem))
ca_full %>%
ggplot(aes( x = long, y = lat, by = "subregion")) +
geom_polygon(aes(group=group, fill = PercDem)) +
scale_fill_gradient2()
ca_full %>%
ggplot(aes( x = long, y = lat, by = "subregion")) +
geom_polygon(aes(group=group, fill = PercDem)) +
scale_fill_gradient2(midpoint=50)
library(RCurl)
library(XML)
library(rvest)
library(curl)
library(gsubfn)
library(Unicode)
#string=c("G1:E001", "G2:E002", G3:E003)
#strapplyc(string, ":(.*)", simplify = TRUE)
setwd("C:/Users/Taikgun Song/Desktop/Emoji Project/twitter examples")
insta="https://twitter.com/hashtag/kickass"
# txt=getURL(insta, .encoding = "UTF-8")
txt=readLines("../package/example_data_set/bb2.txt") %>% paste0(collapse=" ")
# write(txt, "bb.txt")
# bb <- htmlTreeParse(txt)
gsub(" {2,}"," ", txt) -> txt
gsub("\n","", txt) -> txt
pat <- "<(U\\+[[:alnum:]]+?)>"
uni_pat=read.pattern(text = txt, pattern = pat, as.is = TRUE)
check2=NULL
check2=txt
for (i in unique(uni_pat)){
check2=gsub(i, u_char_name(i), check2)
}
View(check2)
unique(uni_pat)
length(unique(uni_pat))
i=1
unique(uni_pat)[i]
check2=txt
for (i in 1:92){
xx=unique(uni_pat)[i]
check2=gsub(xx, u_char_name(xx), check2)
}
View(check2)
as.character(unique(uni_pat)[i])
check2=txt
for (i in 1:92){
xx=as.character(unique(uni_pat)[i])
check2=gsub(xx, u_char_name(xx), check2)
}
View(check2)
i=1
xx=as.character(unique(uni_pat)[i])
xx
u_char_name(xx)
View(check2)
xx="U+0644"
u_char_name(xx)
check2=gsub(xx, u_char_name(xx), check2)
View(check2)
sentiment=readRDS("../data/sentiment.RDS")
sentiment=readRDS("../data/sentiment.RDS")
setwd("C:/Users/Taikgun Song/Desktop/Emoji Project/package/data")
sentiment=readRDS("../data/sentiment.RDS")
View(sentiment)
readRDS("../data/uni_info_v8.RDS") %>% View()
unique(uni_pat)
View(check2)
unique(uni_pat)
system("python -c 'import os;
os.chdir(\"C:\Users\Taikgun Song\Desktop\STAT585\Project\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
'")
system("python -c 'import os;
os.chdir(\"C:\\Users\\Taikgun Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
'")
import os;
os.chdir(\"C:\\Users\\Taikgun Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
system('python -c "
import os;
os.chdir(\"C:\\Users\\Taikgun Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
"')
system('python -c "
import os;
os.chdir(\"C:\\Users\\Taikgun\ Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
"')
system('python -c "
import os;
os.chdir(\"C:\\Users\\Taikgun\ Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\")
"')
system('python -c "
import os;
os.chdir(\"C:\\Users\\Taikgun\ Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\");
"')
system('python "
import os;
os.chdir(\"C:\\Users\\Taikgun\ Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\");
"')
system("python")
system('python;
import os;
os.chdir(\"C:\\Users\\Taikgun\ Song\\Desktop\\STAT585\\Project\\Data\");
import urllib;
urllib.urlretrieve(\"http://2.bp.blogspot.com/-iXF3oEsj7Oc/VcgeKNAWFiI/AAAAAAAB-lc/kykKAQ3ysVY/s1600/%25EB%25B4%2589%25EC%258B%25A0%25EC%2597%25B0%25EC%259D%259801-001.jpg\",\"001.jpg\");
')
system("python" "import os")
system("python 'import os'")
system('python "import os"')
lapply(urls, basic_info)
basic_info=function(url_address){
Base=lapply(ea.paths, function(x) html_nodes(read_html(url_address), xpath=x))
rest_name=Base$ea.name %>% html_text()
rest_star=Base$ea.star %>% sub(".*title=\"([\\.0-9]+) .*", "\\1", .)
rest_url=Base$ea.name%>%
html_attr(name="href") %>%
paste0("https://www.yelp.com",.)
rest_price=Base$ea.price %>% html_text()
rest_cat=Base$ea.cat %>% html_text() %>% gsub("\n {2,}", "", .)
rest_address=Base$ea.address %>%
html_text() %>%
gsub("\n +", "",.)
return(cbind.data.frame(name=rest_name, rating=rest_star, price=rest_price, address=rest_address, category=rest_cat, webpage=rest_url, stringsAsFactors=F))
}
lapply(urls, basic_info)
pkg=c("rvest", "tidyverse", "ggmap", "leaflet", "jpeg")
sapply(pkg, require, character=T)
url_interest=function(FOODTYPE="", LOCATION="Des+Moines,\\+IA"){
initial_url="https://www.yelp.com/search?find_desc=FOODTYPE&find_loc=LOCATION"
initial_url=sub("FOODTYPE", FOODTYPE, initial_url)
initial_url=sub("LOCATION", LOCATION, initial_url)
return(initial_url)
}
ea.url='//div [@class="arrange_unit page-option"]//a [@class="available-number pagination-links_anchor"]'
url_interest() %>%
read_html() %>%
html_nodes(xpath=ea.url)%>%
html_attr(name="href") %>%
paste0("https://www.yelp.com",.) %>%
c(url_interest(), .) ->urls
ea.paths=c(ea.name='.//a [@class="biz-name js-analytics-click"]',
ea.price='//span [@class="business-attribute price-range"]',
ea.cat='//span [@class="category-str-list"]',
ea.address='.//address',
ea.star='//div [@class="biz-rating biz-rating-large clearfix"]')
basic_info=function(url_address){
Base=lapply(ea.paths, function(x) html_nodes(read_html(url_address), xpath=x))
rest_name=Base$ea.name %>% html_text()
rest_star=Base$ea.star %>% sub(".*title=\"([\\.0-9]+) .*", "\\1", .)
rest_url=Base$ea.name%>%
html_attr(name="href") %>%
paste0("https://www.yelp.com",.)
rest_price=Base$ea.price %>% html_text()
rest_cat=Base$ea.cat %>% html_text() %>% gsub("\n {2,}", "", .)
rest_address=Base$ea.address %>%
html_text() %>%
gsub("\n +", "",.)
return(cbind.data.frame(name=rest_name, rating=rest_star, price=rest_price, address=rest_address, category=rest_cat, webpage=rest_url, stringsAsFactors=F))
}
lapply(urls, basic_info)
lapply(urls, basic_info) %>% do.call("rbind",.)->Basic_data
Basic_data
