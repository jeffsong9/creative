theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
p
p = ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))
p = p + geom_bar(stat='identity')+
facet_grid(~topic, scales = "free_x", space = "free", drop=T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
p
p = ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))
p = p + geom_bar(stat='identity')+
facet_grid(~topic, scales = "free", space = "free", drop=T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
p
p = ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))
p = p + geom_bar(stat='identity')+
facet_grid(~topic, scales = "free", space = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
p
p = ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))
p = p + geom_bar(stat='identity', na.rm=T)+
facet_grid(~topic, scales = "free", space = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
p
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free", space = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
ggplot(data = ap_top_terms, aes(x = factor(-term), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
ggplot(data = ap_top_terms, aes(x = factor(-term), y = phi))+
geom_bar(stat='identity', na.rm=T)
ggplot(data = ap_top_terms, aes(x = factor(term), y = phi))+
geom_bar(stat='identity', na.rm=T)
ggplot(data = ap_top_terms, aes(x = factor(term), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
)
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
scale_x_discrete(labels = ap_top_terms[, setNames(as.character(term), term)]) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ap_top_terms
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
scale_x_discrete(labels = ap_top_terms[, setNames(as.character(term), term)]) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
scale_x_discrete(labels = ap_top_terms[, setNames(as.character(term), term)])
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
scale_x_discrete(labels = ap_top_terms[, setNames(as.character(term), phi)]) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_col()+
# geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ggplot(data = ap_top_terms, aes(x = reorder(term, phi), y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))
ap_top_term
ap_top_terms
ap_top_terms %>%
mutate(order = row_number())
ap_top_terms %>%
mutate(order = row_number()) %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms %>%
mutate(order = row_number()) %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free_x", drop = T) +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms %>%
mutate(order = row_number()) %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms %>%
mutate(order = row_number()) %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
theme_bw()+
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms %>%
mutate(order = row_number()) %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms$order
ap_top_terms$term
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms %>%
mutate(order = row_number())->ap_top_terms2
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms$order, labels = ap_top_terms$term, expand = c(0,0))
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
# theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms2$order, labels = ap_top_terms2$term, expand = c(0,0))
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms2$order, labels = ap_top_terms2$term, expand = c(0,0))
dat=rbind.data.frame(
readRDS("../data/twitter_inlove.Rds") %>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "inlove"),
readRDS("../data/twitter_hateher.Rds")%>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "hateher"),
readRDS("../data/twitter_marchscience.Rds") %>%.$V1 %>% paste0(collapse=" "),
stringsAsFactors = F
# mutate(tag = "marchscience"), stringsAsFactors = F
)
names(dat)<-"V1"
dat$V1 %>>%
tolower() %>>%
clean_abb() %>>%
cleaning0() %>%
gsub("[[:punct:]]", "", .) %>%
gsub("\"", "", .) %>%
gsub("\\s{2,}", "\\s", .) %>%
trimws()-> dat1
stop_stem=lapply(dat1, StopNStem) %>%
do.call("rbind",.) %>%
rbind.data.frame(stringsAsFactors=F)
stop_stem$V1 %>%
VectorSource() %>%
VCorpus()%>%
DocumentTermMatrix() ->dtm
lda=LDA(dtm, k = 3, control = list(alpha=1))
lda.raw=terms(lda,10)
pander(lda.raw, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDAraw} Output LDA with the raw data")
ap_topics <- tidy(lda, matrix = "beta")
names(ap_topics)[3]<-"phi"
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, phi) %>%
ungroup() %>%
arrange(topic, desc(phi)) #%>%View()
ap_top_terms<-ap_top_terms[-11,] #Two topic 1 with same phi
split(ap_top_terms, as.factor(ap_top_terms$topic)) %>%
do.call("cbind",.) %>%
select(everything(), -contains("topic")) %>%
pander(split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDArawp} Word prob. given topic")
ap_top_terms %>%
mutate(order = row_number())->ap_top_terms2
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms2$order, labels = ap_top_terms2$term, expand = c(0,0))
dat$V1 %>>%
tolower() %>>%
cleaning_u_plus() %>>%
clean_abb() %>>%
cleaning0() %>%
gsub("[[:punct:]]", "", .) %>%
gsub("\"", "", .) %>%
gsub("\\s{2,}", "\\s", .) %>%
trimws()->dat2
stop_stem=lapply(dat2, StopNStem) %>%
do.call("rbind",.) %>%
rbind.data.frame(stringsAsFactors=F)
stop_stem=lapply(dat2, StopNStem) %>%
do.call("rbind",.) %>%
rbind.data.frame(stringsAsFactors=F)
stop_stem %>%
VectorSource() %>%
VCorpus()%>%
DocumentTermMatrix() ->dtm
lda=LDA(dtm,k = 3, control = list(alpha=1))
lda.no_uni=terms(lda,5)
pander(lda.no_uni, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDA_Uni} Output of LDA with the raw data without the Unicode")
ap_topics <- tidy(lda, matrix = "beta")
names(ap_topics)[3]<-"phi"
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, phi) %>%
ungroup() %>%
arrange(topic, desc(phi)) #%>% View()
split(ap_top_terms, as.factor(ap_top_terms$topic)) %>%
do.call("cbind", .) %>%
select(everything(), -contains("topic")) %>%
pander(split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDA_no_unip} Word prob. given topic")
ap_top_terms %>%
mutate(order = row_number())->ap_top_terms2
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms2$order, labels = ap_top_terms2$term, expand = c(0,0))
emoji_simple=read.csv("../data/all_emoji.csv", stringsAsFactors = F)
U_to_N=function(word){
emoji_simple %>%
filter(unicode==word)->see_trans
if(length(see_trans$trans)==0){
return(word)
}else{
return(see_trans$trans)
}
}
check7=NULL
for(j in 1:length(dat$V1)){
string=dat$V1[j] %>% tolower()
words=strsplit(string, " ")
words=words[[1]]
translated=""
for(i in 1:length(words)){
translated=paste(translated, U_to_N(words[i]), collapse = " ")
print(paste0(j,"-", i))
}
check7=rbind(check7, translated)
# print(j)
}
for(j in 1:length(dat$V1)){
string=dat$V1[j] %>% tolower()
words=strsplit(string, " ")
words=words[[1]]
translated=""
for(i in 1:length(words)){
translated=paste(translated, U_to_N(words[i]), collapse = " ")
print(paste0(j,"-", i))
}
check7=rbind(check7, translated)
# print(j)
}
check7 %>%
clean_abb() %>>%
cleaning0() %>%
gsub("[[:punct:]]", "", .) %>%
gsub("\"", "", .) %>%
gsub("\\s{2,}", "\\s", .) %>%
trimws()-> check7
stop_stem=lapply(check7, StopNStem) %>%
do.call("rbind",.) %>%
rbind.data.frame(stringsAsFactors=F)
stop_stem %>%
VectorSource() %>%
VCorpus()%>%
DocumentTermMatrix() ->dtm
lda=LDA(dtm, k = 3, control = list(alpha=1))
lda.t=terms(lda,5)
ap_topics <- tidy(lda, matrix = "beta")
names(ap_topics)[3]<-"phi"
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, phi) %>%
ungroup() %>%
arrange(topic, desc(phi)) # %>% View()
split(ap_top_terms, as.factor(ap_top_terms$topic)) %>%
do.call("cbind", .) %>%
select(everything(), -contains("topic")) %>%
pander(split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDA_Tp} Word prob. given topic")
ap_top_terms %>%
mutate(order = row_number())->ap_top_terms2
ap_top_terms2 %>>%
ggplot(aes(x = order, y = phi))+
geom_bar(stat='identity', na.rm=T)+
# facet_grid(~topic, scales = "free", space = "free") +
facet_wrap(~topic, scales = "free") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ylab(expression(phi))+
scale_x_continuous(breaks = ap_top_terms2$order, labels = ap_top_terms2$term, expand = c(0,0))
prop_emoji=cbind.data.frame(498/944, 335/1145, 93/1195)
colnames(prop_emoji)<-c("#inlove", "#hateher", "#marchscience")
rownames(prop_emoji)<-"Proportion"
pander(prop_emoji, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:EProp} Proportion of Twitter messages with emoji")
prop_emoji=cbind.data.frame(498/944, 335/1145, 93/1195)
colnames(prop_emoji)<-c("#inlove", "#hateher", "#marchscience")
rownames(prop_emoji)<-"Proportion"
pander(prop_emoji, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:EProp} Proportion of Twitter messages with emoji")
library(knitr)
opts_chunk$set(echo=F, warning=FALSE, message = FALSE, cache=TRUE, tidy.opts=list(width.cutoff=40))
filter(twitter_example_inlove, grepl("U\\+",V1)) %>%
unnest_tokens(word, V1, token = "regex", pattern = "[\\s]") %>%
select(word) %>%
filter(grepl("u\\+",word)) %>%
count(word, sort = TRUE) %>%
head(5)->inlove_uni_count
# dat=rbind.data.frame(
#   readRDS("../Data/twitter_inlove.Rds") %>%
#     mutate(tag = "inlove"),
#   readRDS("../Data/twitter_hateher.Rds")%>%
#     mutate(tag = "hateher"),
#   readRDS("../data/twitter_marchscience.Rds") %>%
#     mutate(tag = "marchscience"), stringsAsFactors = F
#   )
dat=rbind.data.frame(
readRDS("../data/twitter_inlove.Rds") %>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "inlove"),
readRDS("../data/twitter_hateher.Rds")%>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "hateher"),
readRDS("../data/twitter_marchscience.Rds") %>%.$V1 %>% paste0(collapse=" "),
stringsAsFactors = F
# mutate(tag = "marchscience"), stringsAsFactors = F
)
names(dat)<-"V1"
dat$V1 %>>%
tolower() %>>%
clean_abb() %>>%
cleaning0() %>%
gsub("[[:punct:]]", "", .) %>%
gsub("\"", "", .) %>%
gsub("\\s{2,}", "\\s", .) %>%
trimws()-> dat1
pkg=c("tidytext","tidyverse", "pander","topicmodels", "tm", "gridExtra", "pipeR")
sapply(pkg, require, character=T)
'%!in%' <- function(x,y)!('%in%'(x,y))
source("req.R")
twitter_example_inlove=readRDS("../data/twitter_inlove.Rds")
twitter_example_hateher=readRDS("../data/twitter_hateher.Rds")
twitter_example_marchscience=readRDS("../data/twitter_marchscience.Rds")
prop_emoji=cbind.data.frame(498/944, 335/1145, 93/1195)
colnames(prop_emoji)<-c("#inlove", "#hateher", "#marchscience")
rownames(prop_emoji)<-"Proportion"
pander(prop_emoji, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:EProp} Proportion of Twitter messages with emoji")
filter(twitter_example_inlove, grepl("U\\+",V1)) %>%
unnest_tokens(word, V1, token = "regex", pattern = "[\\s]") %>%
select(word) %>%
filter(grepl("u\\+",word)) %>%
count(word, sort = TRUE) %>%
head(5)->inlove_uni_count
colnames(inlove_uni_count)<-c("#inlove","Count")
filter(twitter_example_hateher, grepl("U\\+",V1)) %>%
unnest_tokens(word, V1, token = "regex", pattern = "[\\s]") %>%
select(word) %>%
filter(grepl("u\\+",word)) %>%
count(word, sort = TRUE) %>%
head(5)->hateher_uni_count
colnames(hateher_uni_count)<-c("#hateher","Count")
filter(twitter_example_marchscience, grepl("U\\+",V1)) %>%
unnest_tokens(word, V1, token = "regex", pattern = "[\\s]") %>%
select(word) %>%
filter(grepl("u\\+",word)) %>%
count(word, sort = TRUE) %>%
head(5)->marchscience_uni_count
colnames(marchscience_uni_count)<-c("#marchscience","Count")
emoji_freq=cbind.data.frame(inlove_uni_count, hateher_uni_count, marchscience_uni_count)
pander(emoji_freq, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:EPopular} Five most popular emoji for each hastags")
# xdate_number=xtable(emoji_freq, caption = "Five most popular emoji for each hastags", label = "tab:EPopular")
# print(xdate_number)
# dat=rbind.data.frame(
#   readRDS("../Data/twitter_inlove.Rds") %>%
#     mutate(tag = "inlove"),
#   readRDS("../Data/twitter_hateher.Rds")%>%
#     mutate(tag = "hateher"),
#   readRDS("../data/twitter_marchscience.Rds") %>%
#     mutate(tag = "marchscience"), stringsAsFactors = F
#   )
dat=rbind.data.frame(
readRDS("../data/twitter_inlove.Rds") %>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "inlove"),
readRDS("../data/twitter_hateher.Rds")%>% .$V1 %>% paste0(collapse=" "),
# mutate(tag = "hateher"),
readRDS("../data/twitter_marchscience.Rds") %>%.$V1 %>% paste0(collapse=" "),
stringsAsFactors = F
# mutate(tag = "marchscience"), stringsAsFactors = F
)
names(dat)<-"V1"
dat$V1 %>>%
tolower() %>>%
clean_abb() %>>%
cleaning0() %>%
gsub("[[:punct:]]", "", .) %>%
gsub("\"", "", .) %>%
gsub("\\s{2,}", "\\s", .) %>%
trimws()-> dat1
stop_stem=lapply(dat1, StopNStem) %>%
do.call("rbind",.) %>%
rbind.data.frame(stringsAsFactors=F)
stop_stem$V1 %>%
VectorSource() %>%
VCorpus()%>%
DocumentTermMatrix() ->dtm
lda=LDA(dtm, k = 3, control = list(alpha=1))
lda.raw=terms(lda,10)
pander(lda.raw, split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDAraw} Output LDA with the raw data")
ap_topics <- tidy(lda, matrix = "beta")
names(ap_topics)[3]<-"phi"
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, phi) %>%
ungroup() %>%
arrange(topic, desc(phi)) #%>%View()
ap_top_terms<-ap_top_terms[-11,] #Two topic 1 with same phi
split(ap_top_terms, as.factor(ap_top_terms$topic)) %>%
do.call("cbind",.) %>%
select(everything(), -contains("topic")) %>%
pander(split.table = 180, style = 'rmarkdown', caption = "\\label{tab:LDArawp} Word prob. given topic")
ap_topics <- tidy(lda, matrix = "beta")
names(ap_topics)[3]<-"phi"
ap_top_terms <- ap_topics %>%
group_by(topic) %>%
top_n(10, phi) %>%
ungroup() %>%
arrange(topic, desc(phi)) #%>%View()
ap_top_terms
